<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[HTML5存储初探]]></title>
      <url>%2FHTML5%E5%AD%98%E5%82%A8.html</url>
      <content type="text"><![CDATA[HTML5存储初探常见存储： Cookies localStorage &amp;&amp; sessionStorage indexedDB application cache 其它客户端存储： userData 只有IE支持（IE5.0 … 9.0） google Gears chrome (12.0后放弃支持) 引擎：64SQLite 需要用户授权 CookiesCookies是一种能够让网站服务器把少量数据储存到客户端的硬盘或内存，或是从客户端的硬盘读取数据的一种技术。Cookies是当你浏览某网站时，由Web服务器置于你硬盘上的一个非常小的文本文件，它可以记录你的用户ID、密码、浏览过的网页、停留的时间等信息。 当你再次来到该网站时，网站通过读取Cookies，得知你的相关信息，就可以做出相应的动作，如在页面显示欢迎你的标语，或者让你不用输入ID、密码就直接登录等等 Cookies文件是在无声无息中伴随浏览器进入我们本地硬盘的，当我们浏览某个站点时，该站点很可能将记录我们隐私的cookies文件上传到本地硬盘。 H5存储解决了cookie的问题 解决cookie总数和单个大小的限制(4k 4095B) 解决请求头常带存储信息的问题 解决关系型存储的问题 跨浏览器 本地存储( localStorage &amp;&amp; sessionStorage) 图片不经常更改，不过如果图片bash64比较大的话，会比较浪费资源） 常用属性和方法： 123456localStorage.key(i).length.getItem(&quot;&lt;key&gt;&quot;).setItem(&quot;&lt;key&gt;&quot;,&quot;&lt;value&gt;&quot;).removeItem(&quot;&lt;key&gt;&quot;).clear() 使用注意事项： 使用前先判断浏览器是否支持(浏览器开启无痕模式后不能用, 有的可读但不可写,所以不能用 if(window.localStorage){}来做兼容处理 先set,然后再捕获异常)； 写数据时，要异常处理，避免抛出容量错误； 避免将敏感信息写入localStorage； 注意key的唯一性,会被覆盖 使用场景： 利用本地数据，减少网络传输； 弱网络环境下，高延迟，低带宽，尽量把数据本地化。 H5本地存储的使用限制 需要添加存储更新策略和过期控制 子域名之间不能共享存储数据 超出存储后如何存储(LRU,FIFO) –&gt; LRU (Least Recently Used) FIFO (先入先出) server端如何取到数据（请求参数） localStorage优点： 存储大小达5M 兼容性好，功能强大 应用范围广 indexedDB 定义 一种能在浏览器中持久存储结构化数据的数据库，并为web应用提供了丰富的查询能力。 浏览器支持 chromw11+，FF4+，IE10+，移动端支持弱 存储结构 按域名分配独立空间，一个域名下可创建多个数据库，一个DB可以创建多个对象储存空间（表），一个对象存储空间可以创建多个对象数据。 功能 增 删 改 事务 游标 索引 注：w3c已不在维护Web SQL. 离线缓存（application cache） 离线缓存（application cache）:让web应用在离线情况下继续使用，通过manifest文件指明要缓存的资源。 检测是否在线：navigator.onLine 原理（如图）：读取离线缓存，同时检查manifest文件，有更新时更新文件和缓存。 appcache使用和更新 使用：创建manifest文件 修改资源文件，必须通过修改manifest文件来更新被缓存的文件列表。 优点 完全离线； 资源被缓存，加载更快； 降低server负载。 缺陷 含有manifest属性的当前页一定会被缓存； 更新依赖manifest文件，更新后需要再次刷新； 更新是全局性的，无法单点更新； 对于链接的参数变化敏感，不同的参数视为不同的文件。 占用资源 更新内容会在下次生效 浏览器支持：IE8-不支持。 适用场景 单地址的页面（无参数）； 对实时性要求不高的业务； 离线webapp。 总结 H5存储优势： 存储空间大 接口丰富 数据相对安全 关系型 省流量 H5存储劣势： 浏览器兼容；( localStorage 和 app cache 主流浏览器都兼容的不错 ) 同源策略；( localStorage 不可以跨子域，manifest 所引用的文件必须在同一个域名下面 ) 脚本控制；( 只能在浏览器端存放；服务器端想拿到数据，只能通过请求 ) 更新策略; ( 不像cookie可以设置过期时间；比如localStorage永不过期，必须自己写一套更新机制 )]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[FreeCodeCamp学习笔记]]></title>
      <url>%2Ffcc%E5%AD%A6%E4%B9%A0html%E3%80%81css%E3%80%81jQuery.html</url>
      <content type="text"><![CDATA[FreeCodeCamp学习笔记html学习知识点补充 a标签用#做占位符 img标签里应加alt属性，为了盲人朋友 1&lt;a href=&quot;#&quot;&gt;&lt;img class=&quot;smaller-image thick-green-border&quot; alt=&quot;A cute orange cat lying on its back&quot; src=&quot;/images/relaxing-cat.jpg&quot;&gt;&lt;/a&gt; input标签加placeholder做占位符提示，在需要设置必填项的时候加required属性 1&lt;input type=&quot;text&quot; placeholder=&quot;cat photo URL&quot; required&gt; 单选和复选按钮应加入到label标签里，name属性名应一致，checked为默认选中 12345&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;indoor-outdoor&quot; checked&gt; Indoor&lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;indoor-outdoor&quot;&gt; Outdoor&lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;personality&quot; checked&gt; Loving&lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;personality&quot;&gt; Lazy&lt;/label&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;personality&quot;&gt; Energetic&lt;/label&gt; 盒子模型有三个影响HTML元素布局的重要属性：padding(内边距)、margin(外边距)、border(边框)。 元素的 padding 控制元素内容 content和元素边框 border 之间的距离。 当加大 padding, 将扩大元素内容和元素边框的距离。 元素的外边距 margin 控制元素边框 border 和元素实际所占空间的距离。 当增大 margin 时，将会增加元素边框和元素实际所占空间之间的距离。 如果你将一个元素的 margin 设置为负值，元素将会变大。 css学习浏览器读取 CSS 的顺序是从上到下，这意味着，在发生冲突时，浏览器会使用最后的 CSS 声明。但是如果设置id， id 属性总是具有更高的优先级。 很多情况下，你会使用 CSS 库，这些库可能会意外覆盖掉你自己的 CSS。所以当你需要确保某元素具有指定的 CSS 时，你可以使用 !important. rgb颜色设置0 是 hex code（十六进制编码）中最小的一个，它代表颜色的完全缺失。 F 是 hex code（十六进制编码）中最大的一个，它代表最大可能的亮度。 16 个值和 6 个位置意味着我们有 16 的 6 次方，或者说超过 1600 万种可能的颜色. Hex code 遵循 red-green-blue（红-绿-蓝），或者叫 rgb 格式。hex code 中的前两位表示颜色中红色的数量，第三四位代表绿色的数量，第五六位代表蓝色的数量。 jquery学习jQuery通过选择器来选择一个元素的，然后操作元素做些改变。 要让所有的按钮做弹回效果，只要把这段代码写在 1$(document).ready(function() &#123;&#125;); 里面，然后 1$(&quot;button&quot;).addClass(&quot;animated bounce&quot;); 你可以通过jQuery的addClass()方法给元素添加class,也可以通过jQueryremoveClass()方法去掉元素上的class。 1$(&quot;#target2&quot;).removeClass(&quot;btn-default&quot;); jQuery有一个叫做.css()的方法能让你改变元素的CSS样式。 1$(&quot;#target1&quot;).css(&quot;color&quot;, &quot;blue&quot;); jQuery有一个.prop()的方法让你来调整元素的属性 1$(&quot;button&quot;).prop(&quot;disabled&quot;, true); jQuery的.html()方法可以添加HTML标签和文字到元素，而元素之前的内容都会被方法的内容所替换掉。 我们是通过em[emphasize]标签来重写和强调标题文本的： 1$(&quot;h3&quot;).html(&quot;&lt;em&gt;jQuery Playground&lt;/em&gt;&quot;); jQuery 还有一个类似的方法叫.text()，它只能改变文本但不能修改标记。换句话说，这个方法只会把传进来的任何东西(包括标记)当成文本来显示。 jQuery有一个appendTo()方法可以把选中的元素加到其他元素中。 1$(&quot;#target4&quot;).appendTo(&quot;#left-well&quot;); jQuery的clone()方法可以拷贝元素，方法链function chaining，使用起来很方便。 1$(&quot;#target2&quot;).clone().appendTo(&quot;#right-well&quot;); 每个HTML元素根据继承属性都有父parent元素,jQuery有一个方法叫parent()，它允许你访问指定元素的父元素 1$(&quot;#left-well&quot;).parent().css(&quot;background-color&quot;, &quot;blue&quot;) 许多HTML元素都有children(子元素)，每个子元素都从父元素那里继承了一些属性jQuery有一个方法叫children()，它允许你访问指定元素的子元素。 1$(&quot;#left-well&quot;).children().css(&quot;color&quot;, &quot;blue&quot;) jQuery 用CSS选择器来选取元素，target:nth-child(n) CSS选择器允许你按照索引顺序(从1开始)选择目标元素的所有子元素。 1$(&quot;.target:nth-child(3)&quot;).addClass(&quot;animated bounce&quot;); 获取class为target且索引为奇数的所有元素，并给他们添加class。 1$(&quot;.target:odd&quot;).addClass(&quot;animated shake&quot;); jQuery里的索引是从0开始的，也就是说：:odd 选择第2、4、6个元素，因为target#2(索引为1)，target#4(索引为3)，target6(索引为5)。获取class为target且索引为偶数的所有元素，并给他们添加class。 1$(&quot;.target:even&quot;).addClass(&quot;animated shake&quot;); 让整个body都有淡出效果(fadeOut)： 1$(&quot;body&quot;).addClass(&quot;animated fadeOut&quot;);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CSS3实现3D魔方]]></title>
      <url>%2Fcss%E5%AE%9E%E7%8E%B0%E6%97%8B%E8%BD%AC%E9%AD%94%E6%96%B9.html</url>
      <content type="text"><![CDATA[CSS3实现3D魔方实现思路 写出基础HTML框架 基本CSS样式，初始化 CSS实现魔方的各个面：外轮廓和内盒子 CSS3实现魔方表面的3D位置 CSS3实现旋转 第一步：HTML结构六个面类似如下结构 12345678910111213141516&lt;h1&gt;3D魔方&lt;/h1&gt; &lt;div class="view"&gt; &lt;div class="box"&gt; &lt;div class="red-surfaces"&gt; &lt;div id="one"&gt;&lt;/div&gt; &lt;div id="two"&gt;&lt;/div&gt; &lt;div id="three"&gt;&lt;/div&gt; &lt;div id="four"&gt;&lt;/div&gt; &lt;div id="five"&gt;&lt;/div&gt; &lt;div id="six"&gt;&lt;/div&gt; &lt;div id="seven"&gt;&lt;/div&gt; &lt;div id="eight"&gt;&lt;/div&gt; &lt;div id="nine"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 第二步：CSS初始化1234567891011121314151617181920212223* &#123; margin: 0px; padding: 0px;&#125;body &#123; min-height: 600px; height: 100%&#125;body h1 &#123; margin-top: 50px; text-align: center;&#125;.view &#123; margin: -60px auto; width: 800px; height: 800px; position: relative; border-radius: 20px; -webkit-transform: scale(0.7);&#125; 第三步：CSS实现魔方的各个面：外轮廓和内盒子外轮廓样式 12345678910111213.red-surfaces,.blue-surfaces,.green-surfaces,.white-surfaces,.orange-surfaces,.yellow-surfaces &#123; height: 330px; width: 330px; position: absolute; border-radius: 5px; top: 235px; left: 235px;&#125; 内盒子样式 123456789101112.red-surfaces&gt;div,.blue-surfaces&gt;div,.green-surfaces&gt;div,.white-surfaces&gt;div,.orange-surfaces&gt;div,.yellow-surfaces&gt;div &#123; height: 100px; width: 100px; display: inline-block; border: 5px solid rgba(170, 170, 170, 0.9); position: absolute;&#125; 内盒子颜色 : 六面 123.red-surfaces&gt;div &#123; background-color: rgba(255, 0, 0, 0.8);&#125; 内盒子定位 ：九个小块 1234#one &#123; left: 0px; top: 0px;&#125; 第四步：CSS3实现魔方表面的3D位置六个表面不同角度设置 123.red-surfaces &#123; -webkit-transform: rotateX(-90deg) translateZ(165px);&#125; 第五步：CSS3实现旋转keyframe定义 ：animation name规定需要绑定到选择器的keyframe名称 duration规定完成动画所花费的时间，以秒或毫秒计 timing-function规定动画的速度曲线 delay规定在动画开始之前的延迟 iteration-count规定动画应该播放的次数 direction规定是否应该轮流反向播放动画 123.box&#123; -webkit-animation:BoxRotate 3s ease-in-out infinite;&#125; 动画旋转基准 : transform-origin123.box&#123; -webkit-transform-origin: 400px 400px 200px;&#125; 3D实现：transform-style123.box&#123; -webkit-transform-style: preserve-3d;&#125; keyframe定义旋转 1234567891011121314151617@-webkit-keyframes BoxRotate &#123; 16% &#123; -webkit-transform: rotateY(-90deg) rotateZ(135deg); &#125; 33% &#123; -webkit-transform: rotateY(-90deg) rotateX(135deg); &#125; 50% &#123; -webkit-transform: rotateY(225deg) rotateZ(135deg); &#125; 66% &#123; -webkit-transform: rotateY(135deg) rotateX(135deg); &#125; 83% &#123; -webkit-transform: rotateX(135deg); &#125;&#125; 总结CSS3也可以实现js实现的动画，而且还减少资源消耗，要熟练掌握新特性。 源码地址：github-xuyanbo03]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[kali linux 安装指南]]></title>
      <url>%2Fkali%20linux%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97.html</url>
      <content type="text"><![CDATA[kali linux 安装指南 Kali Linux是基于Debian的Linux发行版， 设计用于数字取证和渗透测试。Kali Linux预装了许多渗透测试软件，包括nmap (端口扫描器)、Wireshark (数据包分析器)、John the Ripper (密码破解器),以及Aircrack-ng (一应用于对无线局域网进行渗透测试的软件).用户可通过硬盘、live CD或live USB运行Kali Linux。Metasploit的Metasploit Framework支持Kali Linux，Metasploit一套针对远程主机进行开发和执行Exploit代码的工具。Kali Linux既有32位和64位的镜像。可用于x86 指令集。同时还有基于ARM架构的镜像，可用于树莓派和三星的ARM Chromebook. –[百度百科] 安装步骤下载kali linux 官网 U盘刻录镜像刻录U盘工具：Win32 Disk Imager 这个工具刻录的镜像比较完整，可直接用U盘启动，比软碟通要好。 安装 刻录U盘后重启电脑，不需要用EasyBCD。 重启电脑后进入bios，选择U盘启动 进入镜像，选择Graphical install选项，当然选择install也是一样的 安装语言、地区、键盘 无法挂载光盘解决：拔下U盘再插上，选择是继续 网络设备固件缺失：直接选择否继续 设置主机名和密码：默认用户名：root 密码：toor 磁盘分区（最重要一部分），这一部分是很重要的一步，一定要注意看清，选对，再操作。 选择手动 选择我们准备好要安装kali的那个分区 分配分区: /boot:启动分区 / :根分区 /home:用户目录 /tmp:临时文件 /usr:文件系统 /var:可变数据目录 /opt:附加应用程序 swap:交换分区 一般分/boot、/、/home、swap 分区方案关键点： 大数据库一般要加大/usr挂载点 多用户、下载类、多存储文件等要加大/home挂载点 文件小，用户多要注意/tmp和/var挂载点大小 选择“分区设定结束并将修改写入磁盘”继续 开始格式化并写入磁盘，这个过程可能有点长，请耐心等待 网络镜像 写入引导（很重要一步）:一定选是，是个坑 安装完成 安装之后 更新软件源 修改sources.list文件：/etc/apt/sources.list 然后选择添加适合自己较快的源（可自由选择） 保存之后： apt-get update #刷新系统 apt-get dist-upgrade #安装更新 kali-linux安装中文输入法 apt-get install fcitx-table-wbpy ttf-wqy-microhei ttf-wqy-zenhei #拼音五笔 安装gnome管理软件 apt-get install gnome-tweak-tool 安装新立德 apt-get install synaptic 安装解压缩软件 apt-get install file-roller 安装smplayer视频播放器 apt-get install smplayer 安装多窗口终端 apt-get install terminator 安装VMware和VirtualBox 使用及相关系统渗透测试笔记：使用渗透工具进行测试 BackBox：黑客工具箱 Parrot Security os：本人用的最炫的一个系统，安装也简便，工具很强大，但是系统内部文件跟常规系统不太一样，适合对linux熟悉的人员使用 Cyborg Hawk：工具最多的一个系统，但是全英文，不支持中文，对英语水平要求很高。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[MapReduce初探]]></title>
      <url>%2FMapReduce%E5%88%9D%E6%8E%A2.html</url>
      <content type="text"><![CDATA[MapReduce初探MapReduce是一个用于处理海量数据的分布式计算框架 MapReduce解决的问题： 数据分布式存储 作业调度 容错 机器间通信 MapReduce存储：HDFS 系统可靠性 可扩展性 并发处理 MapReduce思想：分治 分解 求解 合并 分：map 把复杂的问题分解为若干简单的任务 合：reduce MapReduce执行流程 实例WordCount 应用 数据统计 A/B test的需要，实验和对照统计对比各个指标 统计广告每天的展示、点击和消费总量 统计视频在一段时间内展示和点击数量，CTR指标 数据过滤 从日志中找到某一个条件数据 除去非法数据，保留合法数据 数据格式整理 同类汇聚 多份日志中，相同时间点、用户行为日志混合 类表格文件存储中，相同主键拼接相关的属性 历史的主数据与新增、修改数据合并 全局排序 混合日志按时间排序 多个字段排序 数据按名称排序 容错框架 易出错的服务，大数值计算 计算规模经常变化调整的服务 单进程程序。迅速提升执行计算效率]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Googlehack]]></title>
      <url>%2FGoogleHack%E6%96%B9%E6%B3%95.html</url>
      <content type="text"><![CDATA[Googlehack 这些命令均为在Google搜索引擎中才能使用 中文引号“ ”在搜索关键字时，加上中文的“”号，你就能精确的只搜“”里面的文字了。 在搜索词后面加上“site:网站名”：举个例子吧，就如搜索 白帽 site:sina.com ，那么就能搜索在新浪（sina.com）这个域名下的，有关“白帽”的信息了。搜索出的结果均为新浪网中，与白帽有关的网页 “-”：就一个减号，在输入搜索词的后面，空格后加上一个减号。在减号后面输入你想过滤的东西，比如你想搜姚明，但又不想看他与篮球有关的东西，那么你只需要这样“姚明 -篮球”进行搜索就可以得出姚明与篮球无关的信息了。 * 号：在搜索词前面加上该符号，就可以搜索出与号后面相关的词语的内容，如你输入伟，那么出来的结果都会是XX伟，而不会是伟XX的内容。 filetype：爱在网上找资料的人都有很难找到想要的东西，要么名字对格式不对，要么格式对，内容不对。这里的filetype就可以准确的搜索出某个关键字下，你想要的文件名。如搜索（数学 filetype：pdf），就会出来与数学有关的所有pdf文件。 info:url在搜索栏中输入这个，就会出来被搜索网址的所有信息。 intitle:在搜索词前输入这个命令，那么就会搜出网页中是以搜索词为标题的网页。 inurl:输入网址后，是在搜索的结果中，把包含了URL的结果页面返回(也就是在结果中找有多少是你的网址的内容)，如：inurl:baidu.com site:www.sina.com,则会搜索出新浪网中所有包含了baidu.com 网址的网页。 link:url这个是独立使用的，输入这个之后，可以搜索出所有与这个网页有关联的网页。也就是我们平时进入网页后，可以在网页底部看到的合作网站。通过这个命令，我们可以不用进入网站就可以查出这个网站与那些网站合作了，明里暗里的都能看到哦。 location：这个命令是为了精确区域而设计的，如你只想查深圳的女子大学的网页，那么就可以这样进行查找：女子大学 location：ShenZhen 这样就会出来深圳区域所有的女子大学相关网页了，而不会把其它地区的女子大学的也搞过来。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CSS学习笔记]]></title>
      <url>%2Fcss%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="text"><![CDATA[CSS学习笔记 CSS Positioning(定位)CSS定位属性允许你为一个元素定位。它也可以将一个元素放在另一个元素后面，并指定一个元素的内容太大时，应该发生什么。元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法 有四种不同的定位方法： Static 定位HTML元素的默认值，即没有定位，元素出现在正常的流中。 静态定位的元素不会受到top, bottom, left, right影响。 Fixed 定位元素的位置相对于浏览器窗口是固定位置，即使窗口是滚动的它也不会移动。 Fixed定位使元素的位置与文档流无关，因此不占据空间。 Fixed定位的元素和其他元素重叠。 Relative 定位相对定位元素的定位是相对其正常位置。 可以移动的相对定位元素的内容和相互重叠的元素，它原本所占的空间不会改变。相对定位元素经常被用来作为绝对定位元素的容器块。 Absolute 定位绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于。 Absolutely定位使元素的位置与文档流无关，因此不占据空间。 Absolutely定位的元素和其他元素重叠。 重叠的元素元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素。 z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面），一个元素可以有正数或负数的堆叠顺序。 CSS Float(浮动)CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。Float（浮动），往往是用于图像，但它在布局时一样非常有用。 元素怎样浮动元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。 一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。 浮动元素之后的元素将围绕它。 浮动元素之前的元素将不会受到影响。 清除浮动 - 使用 clear元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用 clear 属性。clear 属性指定元素两侧不能出现浮动元素。 常见CSS布局双飞翼布局 圣杯布局 流式布局 CSS3 模块CSS3被拆分为”模块”。旧规范已拆分成小块，还增加了新的。 一些最重要CSS3模块如下： 选择器 盒模型 背景和边框 文字特效 2D/3D转换 动画 多列布局 用户界面]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[HTML学习笔记]]></title>
      <url>%2Fhtml%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="text"><![CDATA[HTML学习笔记 html结构及常用元素123456789&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;文档标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt;可见文本...&lt;/body&gt;&lt;/html&gt; 123456&lt;h1&gt;最大的标题&lt;/h1&gt;&lt;h2&gt; . . . &lt;/h2&gt;&lt;h3&gt; . . . &lt;/h3&gt;&lt;h4&gt; . . . &lt;/h4&gt;&lt;h5&gt; . . . &lt;/h5&gt;&lt;h6&gt;最小的标题&lt;/h6&gt; 123456789101112131415161718192021222324252627282930&lt;p&gt;这是一个段落。&lt;/p&gt;&lt;br&gt; （换行）&lt;hr&gt; （水平线）&lt;!-- 这是注释 --&gt;&lt;b&gt;粗体文本&lt;/b&gt;&lt;code&gt;计算机代码&lt;/code&gt;&lt;em&gt;强调文本&lt;/em&gt;&lt;i&gt;斜体文本&lt;/i&gt;&lt;kbd&gt;键盘输入&lt;/kbd&gt;&lt;pre&gt;预格式化文本&lt;/pre&gt;&lt;small&gt;更小的文本&lt;/small&gt;&lt;strong&gt;重要的文本&lt;/strong&gt;&lt;abbr&gt; （缩写）&lt;address&gt; （联系信息）&lt;bdo&gt; （文字方向）&lt;blockquote&gt; （从另一个源引用的部分）&lt;cite&gt; （工作的名称）&lt;del&gt; （删除的文本）&lt;ins&gt; （插入的文本）&lt;sub&gt; （下标文本）&lt;sup&gt; （上标文本）普通的链接：&lt;a href=&quot;http://www.example.com/&quot;&gt;链接文本&lt;/a&gt;图像链接： &lt;a href=&quot;http://www.example.com/&quot;&gt;&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot;&gt;&lt;/a&gt;邮件链接： &lt;a href=&quot;mailto:webmaster@example.com&quot;&gt;发送e-mail&lt;/a&gt;书签：&lt;a id=&quot;tips&quot;&gt;提示部分&lt;/a&gt;&lt;a href=&quot;#tips&quot;&gt;跳到提示部分&lt;/a&gt;&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot; height=&quot;42&quot; width=&quot;42&quot;&gt; HTML实例代码12&lt;div&gt;文档中的块级元素&lt;/div&gt;&lt;span&gt;文档中的内联元素&lt;/span&gt; 1234&lt;ul&gt; &lt;li&gt;项目&lt;/li&gt; &lt;li&gt;项目&lt;/li&gt;&lt;/ul&gt; 1234&lt;ol&gt; &lt;li&gt;第一项&lt;/li&gt; &lt;li&gt;第二项&lt;/li&gt;&lt;/ol&gt; 12345678910&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 1&lt;iframe src=&quot;demo_iframe.htm&quot;&gt;&lt;/iframe&gt; 123456789101112131415&lt;form action=&quot;demo_form.php&quot; method=&quot;post/get&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;email&quot; size=&quot;40&quot; maxlength=&quot;50&quot;&gt;&lt;input type=&quot;password&quot;&gt;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt;&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Send&quot;&gt;&lt;input type=&quot;reset&quot;&gt;&lt;input type=&quot;hidden&quot;&gt;&lt;select&gt;&lt;option&gt;苹果&lt;/option&gt;&lt;option selected=&quot;selected&quot;&gt;香蕉&lt;/option&gt;&lt;option&gt;樱桃&lt;/option&gt;&lt;/select&gt;&lt;textarea name=&quot;comment&quot; rows=&quot;60&quot; cols=&quot;20&quot;&gt;&lt;/textarea&gt;&lt;/form&gt; HTML5 中的一些有趣的新特性用于绘画的 canvas 元素 用于媒介回放的 video 和 audio 元素 对本地离线存储的更好的支持 新的特殊内容元素，比如 article、footer、header、nav、section 新的表单控件，比如 calendar、date、time、email、url、search IE9 以下版本浏览器兼容HTML5的方法使用菜鸟教程的静态资源的html5shiv包：123&lt;!--[if lt IE9]&gt;&lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt; 载入后，初始化新标签的CSS：/html5/123article,aside,dialog,footer,header,section,footer,nav,figure,menu&#123; display:block&#125; html5shiv.js 引用代码必须放在 元素中，因为 IE 浏览器在解析 HTML5 新元素时需要先加载该文件。 字符实体HTML 中的预留字符必须被替换为字符实体。 一些在键盘上找不到的字符也可以使用字符实体来替换。 HTML 中的常用字符实体是： 不间断空格(&nbsp;)。 大于&amp;rt； 小于&lt; 引号 &quot; 版权 &copy; &#169; 注册商标 &reg; &#174; 商标 &trade; URL - 统一资源定位器Web浏览器通过URL从Web服务器请求页面。当您点击html页面中的某个链接时，对应的 &lt;a&gt;标签指向万维网上的一个地址。 一个统一资源定位器(URL) 用于定位万维网上的文档。 语法规则: scheme://host.domain:port/path/filename 说明: scheme - 定义因特网服务的类型。最常见的类型是 http host - 定义域主机（http 的默认主机是 www） domain - 定义因特网域名，比如 runoob.com :port - 定义主机上的端口号（http 的默认端口号是 80） path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。 filename - 定义文档/资源的名称]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[怎样建一个自己的网站]]></title>
      <url>%2F%E6%80%8E%E4%B9%88%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99.html</url>
      <content type="text"><![CDATA[怎样建一个自己的网站下面是详细步骤： 要建立个人网站，首先必须要了解一下目前网页制作的基本语言HTML，入门即可，大概花个一二小时就可。 学会使用目前流行的网页制作软件，如Atom、Brackets等一些功能强大，所见所得的软件，初步了解就可，不用全部掌握，一般是边用边学，不断提高使用水平。 广泛的上网浏览各种网页，一开始最好能下载一些较简单的个人网页，因为他们所用到的技术较为简单，可用网页制作软件打开研究。然后推荐去浏览一些专业的网页设计网站，学习一些排版经验，同时可下载一些网页结构模版供自己套用。 确定你的网站主题，网站主题最好是有你的个人特色，实在不能确定我建议自己做一个私人门户网站，将平时自己经常去的网站做一个较为综合的连结。 网页最好不要用特别与众不同的颜色、字体，因为每个人使用的计算机各不相同，特别的颜色、字体别人不一定能看得到。 网页要增加美观图片不可缺少，我建议如果你会用一些专业的作图软件最好自己制作，这会有自己的特色，放些私人照片也可以，但切记各种图片一定要作优化处理，减小它的存储尺寸。提醒一下每页不要放过多的图片，因为第一会使网页显得杂乱，第二会使你的网页显示速度过慢。制作图片的常用软件有Photoshop，Fireworks等。 网页上可以用一些动画与特效增加你主页的美观与功能，动画可上网找，同样最好能自己制作，GIF格式的最常用，可用Ulead的Gig Animator软件制作，目前流行的是H5动画，更多变化，尺寸更小。网上还有许多免费的Javascript等可供使用，与图片一样，我建议每页不要放太多的动画与特效。 网页基本建成后，上网找免费的主页空间，以其主机的速度，提供的空间大小和有无基本的CGI功能及其提供的域名是否简单易记为考量依据，所谓CGI是指主机服务器上提供的程序，一般你可申请有免费计数器、留言板等。找到速度快，主页存放空间大，域名简单的网站存放你的网页。 将网页上传至你申请的服务器上，具体上传的办法你在申请主页空间时就会了解，具体使用你制作网页的软件即可，我个人推荐使用FTP上传，这个软件功能强大，简单易用。 网站已建立,可与其它网站申请友情连结、去一些提供连结交换的网站申请广告交换，如太极链，酷站等。在做这一步时你需要做二个468X60和88X31尺寸的广告图片，动画最好，存储大小尽量控制在10k以下。 如果你还想靠你的网站赚一些小钱，你可去一些商业网站申请广告连结，替他们做广告，一般以从你的网页点击到他们的网页次数算钱。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[SEO学习笔记]]></title>
      <url>%2FSEO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="text"><![CDATA[SEO学习笔记 搜索引擎工作原理 SEO简介： Search Engine Optimization 搜索引擎优化 白帽SEO 灰帽SEO 白帽SEO（内容上的SEO）： 网站标题、关键字、描述 网站内容优化 Robot.txt文件 网站地图 增加外链引用 SEO注意要点： 结构布局优化：用扁平化结构（层次结构超过三层小蜘蛛就不愿意爬了） 控制首页链接数量（中小网站100以内，页面导航、底部导航、锚文字链接等） 扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构） 导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方） 内容页面的布局细节 左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞） 网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k 网页代码优化（语义化代码） title标题：强调重点 meta keywords关键词：列举几个关键词/简洁高效词语 meta description网页描述：高度概括网页的内容 以上信息不要堆积、重复 有利搜索引擎 a：访问外部链接时要加上 rel=”nofollow”，告诉搜索引擎外部链接无需追踪，加上 title 说明 h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签 br 用于文本间的换行，用在 p 内，也可以用 表示空行 caption：表格标题 img：使用 title、alt 说明 表示强调，的权重仅次于,如果只想表示加粗斜体，建议使用,表示强调则使用 重要内容 HTML 代码放在最前面（使用 css 改变布局） 重要内容不要用 JS 输出（搜索引擎看不懂 JS） 尽量少使用 iframe 框架（搜索引擎不喜欢） 谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index/text-index 代替） 精简代码]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[内心感悟]]></title>
      <url>%2F%E5%86%85%E5%BF%83%E6%84%9F%E5%8F%97.html</url>
      <content type="text"><![CDATA[内心感悟 总结为四个字：感同身受 小感悟激励自己： 唯梦想可敬！ 突然发现每个人都在发现自己的亮点，给自我升值，健身与读书是最廉价却效果最好的升值方式。 走累了，总想回头看看，但还需义无反顾的往前。 上天给我们生命，是让我们创造奇迹的。 大事沉稳的说，小事开玩笑的说。 学习要总结，不然效率太低，最好多写点博客，与别人分享很重要。 跟不同人交往用不同方法，公关也是门学问。 最高境界的善行，就像水的品性一样，造福万物而不争名利。 水，避高趋下是一种谦逊，奔流到海是一种追求，刚柔相济是一种能力，海纳百川是一种大度，滴水穿石是一种毅力，洗涤污淖是一种奉献。 逝者如斯乎，人生尤如奔流至海的江水。 乐善好施不图报，淡泊明志谦如水。学水之善，上善若水 。 一种态度走天下，必然处处碰壁；因地制宜，因人而异，多怀感恩心、才能四海通达。 “积极主动”、“以终为始”、“要事第一”、“双赢思维”、“换位思考”、“不断更新”这些习惯有助于让人提高效率，成为一名高效能人士。 不要在你最美好的年纪做个只会玩手机的胖子。 以前央视有条微博说有7成网友赞成数学退出高考，下面一片叫好声，我有个朋友淡淡回了一句：“数学就是用来把这7成人筛出去的。”这句话我永远记得，所有被千夫所指的困难，就是用来淘汰掉懦夫，仅此而已。 人生只有900个月。 有一种落差是：你配不上自己的野心，也辜负了所受的苦难。 我努力的意义是想给妈妈买东西时像她给我买时一样干脆。父母是我最低的泪点没有之一。 你凭什么认为会有人拉你一把。 不要把世界拱手让给你瞧不起的人。 你的孤独别人又不知道，何必作践自己。 以你的努力程度，还轮不到拼天赋！ 人丑就应该多读书。 我们一路奋战 ，不是为了改变世界，而是不让世界改变我们。 总结沟通经验 与老人沟通，不要忘了他的自尊； 与男人沟通，不要忘了他的面子； 与女人沟通，不要忘了她的情绪； 与上级沟通，不要忘了他的尊严； 与年轻人沟通，不要忘了他的直接； 与儿童沟通，不要忘了他的天真。 最后说自己技术只是敲门砖，只是生活的一部分，曾经雄心斗志，如今低头写码。改变能改变的，接受不能改变的。人生有限，只争朝夕。人生学习的态度要不急不躁，不快不慢。持之以恒，相信自己。不求能改变世界，但求能改变自己的生活。不求健步如飞，但求一步一脚印。感谢磨难，他使我们内心更为坚强。感谢挫折，他使我们不断的成长，感谢bug，他使我们的思维更加深邃。感谢前端，他使我们更加的相信，撑起一片天空需要十八般武艺。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[提升效率]]></title>
      <url>%2F%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87.html</url>
      <content type="text"><![CDATA[提升效率 在前进的路上，放弃那些次要的、可有可无的东西，获取真正重要、有意义的价值，让自己更加认同自己的付出和努力方向，这才是时间管理的本质和最大意义所在。 必须学会说“不”说“不”其实是个非常艰难的事情，可是如果不说no，那么就很难专心地应对真正重要的任务。因为有太多看起来不错的机会、看上去不能拒绝的要求、事成后有利的图景，以及无法拒绝的人情世故，诱惑着你答应下来。 其实工作越久，你就越会发现，真正的牛人，往往就牛在敢于放弃上。所谓的战略化决策，不仅仅是指战略高度的选择，也指战略高度的放弃。刚开始放弃的时候会很难受，这是多年形成的习惯和求全责备的心态发出的尖叫和抗议。可是时间久了才发现：不重要的事情真做不完也不会死，倒是重要的事情老拖着不做往往会后果比较严重。 必须学会说yes对我而言，如果想要找时间完成真正重要的事情，那么就先答应下来，再商量个相对宽裕的时间。将这些定下来之后，我总能想出方法，排除万难去实践。 无论是写小说、开公众号、参加考试，都可以遵循这个套路。牺牲掉部分娱乐、睡眠、社交，甚至是和家人团聚的时间，会非常适合短期内的明确目标，并督促你用冲刺的方式完成。 如果一件事情并不重要，那么就明确地拒绝；如果很重要，就大胆地接受。你不会因为说“不”损失多少，也不会因为应承去做却没有做好而损失很多。真正的损失是在我们说“这事儿很好，我再想想”中发生的。 金钱换时间以前没有孩子的时候，我习惯利用整块时间写作，写作进入状态也非常缓慢，必须要在阳光充足的某个角落坐下，泡杯咖啡，看看新闻，再慢慢进入状态。 现在可用的业余时间往往是零散的，如果不能抓住零散时间进行思考和打草稿，那就更没有时间了。为了能更好地抓住这些碎片时间，我添置了更多的电子设备，例如静音且无须插电源的平板电脑，它能让我更好地利用孩子入睡后的时间。再比如我打破了从前不下载App的习惯，安装了多个阅读、记录、拍照笔记类的App，方便自己在零碎时间里能随时把读到的、想到的、看到的、诱发灵感的材料都尽快地收纳进来。 找到时间后，就是筹划和管理时间了。 关掉提醒，高效专注地工作要想工作有效，就必须运用整块的时间。如果将时间分割开来零星使用，纵然时间总和相同，但其效果与整块运用时间的效果却差距很大。比如我以前工作时常要写一些措辞讲究的英文邮件，如果能够聚精会神地写，再加上润色，十几分钟就能完成。可是我总会忍不住一边写一边去看看什么人又说了什么话，有时还会因为查某个单词去逛下红迪网。 后来实在忙起来了，任凭各种新信息提醒也不去查看，等到某个任务告一段落，再统一查看和回复，既保证了效率，又不至于错过什么。仅这一项小小的改变，就大大提高了我的工作效率。 减少选项，设置优先级选项越少，时间越多。一个比较经典的时间管理方法是：每天只选择1～3件事情去做，并辅以不懈地追求。你的本能不会喜欢这样的限制，可是这种方法有利于排列真正重要的事情，比起事无巨细地齐头并进，能让工作更为出色。 提前把你想到的写下来当事情一旦多了杂了，脑子就明显不够用。我经常发现，哪怕是小事，如果写下来就会遵守；不写，无论在脑子里想多久，一被打扰就会忘掉。提前计划的目的其实不是为了“计划”，而是为了更重视时间的流向，知道时间都花到哪里去了。 如果不是很清晰地知道要做什么，就容易碰到什么是什么。于是哪件事情先找上来就先处理了，就好比我特别反感邮箱，因为邮件不停地进来，叮的一声响。只要邮箱的叮声不关，我就永远干不了该干的事情，会一直挂在邮箱上回复邮件，而且要一会儿回邮件，一会儿写报告，一会儿又查数据。数据查到一半叮的一声邮件又进来了，说到了另一件事，再去查……忙了一上午，几件重要的大事却一件都没干。 先把所有需要完成的事列出来，然后对大任务进行分解，分解成小一些的子任务，再对任务进行排序。排序时最艰难的步骤就是决定放弃或者推迟哪些东西。 找到适合自己的好方法开始时间管理的时候，大家都会热衷于搜罗和学习各种方法。比如有一种著名的战拖策略叫作“吃掉那只青蛙”，鼓励大家给最重要、最困难的任务以第一优先权。但是我在实践之后，却发现这个方法极其不适合我。因为如果一上来就强迫自己完成最艰巨的任务，我反而会容易知难而退，会造成各种拖延。所以我摸索出的合适自己的方法是先完成最简单、最有兴趣的工作，通过这些初级工作渐入佳境，等效率上来了，再去啃“坚硬的骨头”。 说到这里，时间管理却还不能结束。桥本和彦曾经说过，“没有体现结果的时间管理就不能称之为时间管理”，因此定期对时间管理的成就和不足之处进行反思，就有非常重要的意义。 坚持时间管理最大的挑战就在于：即便你用最高科技的工具，按照最合理的科学方法、符合生物钟的方法规划好了时间，然后恪守，一天下来有很大的收获，你的内心也在呼唤你歪倒在沙发上刷手机、追美剧、和朋友瞎聊。 为了战胜无时不在的诱惑，就需要时不时地重温一下目标，配合着各种短期、中期、长期的目标，时间管理上也应相应配合着进行松弛有度的分布。任何时间管理和战拖秘诀都离不开恒心，但是生活必须要张弛有度。 如果是学生为了考GRE，那么两个月的短期突击式的冲刺，要比断断续续地复习一年有效；而大考完毕，可以有一小段时间让大脑放松下，以便进入下一阶段的目标。 一个人如果长期无目标地疲劳战斗，那么时间管理便会沦为空谈，你依旧会身心俱疲且内心无比迷茫，那样的话还不如好好歇着。 当然，如果把时间管理放到整个人生来看，有些人喜欢有计划、高产高效的生活，也有人喜欢随性自由的节奏。这些都没有问题，你尽可以按自己的喜好选择自己喜欢的方式。不过要记住，每种选择都意味着相应的放弃，只要回过头时不会患得患失就好。 对很多人而言，时间管理也是一种成就。他们对时间管理的追求，就是对成就感的追求，这也是他们进行时间管理的最大动力。 如果是这种情况，那么拥有一个能完成后打钩的to-dolist（待办事项列表）或者任务工作本、相关任务管理App，让这种成就可视化，就是很好的选择。 对我个人而言，时间管理的最大成功，不是达成了什么了不起的大成就，而是让自己能更明晰时间的去向、对事物的价值度有所衡量，并通过“管理时间”这一具体行动，让自己不再盲目焦虑。 总结在前进的路上，放弃那些次要的、可有可无的东西，获取真正重要、有意义的价值，让自己更加认同自己的付出和努力方向，这才是时间管理的本质和最大意义所在。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[学习新技术建议]]></title>
      <url>%2F%E5%AD%A6%E4%B9%A0%E6%96%B0%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%B9%E6%B3%95.html</url>
      <content type="text"><![CDATA[学习新技术建议 我们生活在一个振奋人心的时代。我们可以越来越方便廉价地获得大量学习资源。这些资源的传播载体由最初的教室被变成了博客，技术论坛等。坐拥如此众多的学习资源，我们没有任何理由不去好好利用。随之而来的问题便是如何在这知识的海洋中选择自己的前进方向。尽管我的建议主要涉及的是软件开发方面，但是这些原则在其他领域也同样适用。 克服惯性万事开头难，克服惯性是学习新技术的第一步。举个日常生活中惯性存在的简单栗子，当我们看电视的时候会因为遥控器不在身边而懒得换台。幸运的是有很多的小技巧可以调动我们的积极性，帮助我们克服惯性。对于我来说，微习惯是一个很好用的小技巧。与其被手头的任务吓到，不如将任务细分为一个个具体的微任务，然后挑选其中的一个开始做起。就“拿到遥控器”这个例子来说，首先扭动你的脚趾，向前伸出，然后推动整个人离开沙发。下一步，身体滑到地上，用脚拿到遥控器，然后起身。通过完成一个个的微任务，你会发现自己克服了惯性，并且这项任务不再显得难以完成。这个方法可以被应用到学习新技能的过程中。关键就是将大块任务细分为微任务。 关注大牛学习新技能的第一步是明确要学什么。它可以是任何你有激情去学，并且想深入学习的一些东西。这种原始的学习欲望非常重要，这种欲望可以在你的学习低潮期给你提供动力。你想学的或许是一门新的编程语言、应用框架或者是新的工具，一旦你确定了想要的是什么，就立刻去收集相应的优秀群体所做的一些优质的工作成果。这些可以从YouTube、Vimeo、HackerNews、各种博客，甚至是你的微博好友那里获取。关注别人做了些什么可以给你强大的信心，让你觉得 “You can do it, too!” 建立知识网当你对自己要学习的东西建立了信心之后，接下来要做的就是做一块海绵，然后开始疯狂地吸收知识。从Google搜索关键词“beginner tutorials”开始吧，搜索一些跟你要学习的知识相关的入门教程。如你所知，Nettuts+上面有成千上百的各种教程供你选择，StackOverflow上面也有很多学习资源。此外，Quora也是一些不错的选择。通过浏览这些网上的资源之后，如果想要集中精力学习某一方面，这时就需要阅读一些相关的书籍了，个人推荐在Amazon上面寻找一些评分较高的专业书籍来提高自己。 多听多看随着你对技术的深入挖掘，你可能会想利用更多其他形式的学习资料，比如podcasts，screencasts等等。我的建议是多用 iTunesU，这上面有很多很专业的知识可以让你对于特定的领域进行深入的探索。 可以看一些免费的会议视频材料，比如YouTube上面的Google IO，以及Confreaks！ 行动起来现在你已经看了一波又一波的教程以及视频资料，并且对于想学的技术已经有了一个相当深入的了解，接下来做些什么呢？没错，是时候理论联系实际了，实践是检验真理的唯一标准。 用你所掌握的技术做一个个人的小项目，设计一些简单的功能并且实现他们。毫无疑问，你会遇到很多的绊脚石，当遇到它们的时候，在StackOverflow或者Google上面搜索之，解决之。你已经踏上一条成为某一领域专家的旅程，遇到的困难挫折越多，你会变得越睿智。有句老话说得好，“专家是犯错最多的人”，这意味着他们尝试了很多疯狂的事情来探索这门技术的极限，最后，对于这门技术是如何运作的就可以知根知底。拥有这种洞察力之后，他们便可以随心所欲的运用这项技术去按照自己的意愿完成想做的事情（当然，是做好的事情）。 写博客在你进行你的探险之旅的时候，实时记录下你的成长以及犯下的错误大有裨益。在技术领域，博客是最简单易得并且受欢迎的表达载体。当你准备落笔的时候，你会强迫自己整理思路，并且对积累下来的零散的知识片段进行结构梳理。说不定，通过互联网的分享，你的经历和分享会给别人的成长带来帮助。 如果你想走的更远（比如想像Nettuts+上面的职业作者一样），你也可以制作属于自己的screencasts。总的来说，写博客能够提升你的个人沟通能力，这与你学到的技术同样重要。 感受技术的脉搏社交网络已经广泛应用于人们的日常交流以及发现新鲜事物。Twitter和Facebook是信息的主要来源，与此同时，有很多的网站提供更专注的资讯，如前面提到过的Quora网站，这上面有很多涉及面很广的一些话题供人们评论。在这上面可以找到很多知名大牛的建议以及观点。 浏览StackOverflow上面的众多话题是一个很有意思的过程，你可以看到他人如何探索某种技术的极限。事实上，在人们利用技术做一些疯狂的甚至是荒诞的事情的时候，技术也随之不断的成熟起来。 因此，如果你想要感受到技术的脉搏，并且想确认它是否值得学下去，在StackOverflow上面试着搜索一些话题，看看这个讨论社区的广度与深度。最值得看的是投票最多以及热门话题。你也可以尝试在GitHub上面进行搜索。 参加聚会以及会议尽管社交网络很棒，但是没有任何事物可以取代面对面的交流。在你住的附近参加一些小组聚会，在这里你可以找到志同道合的伙伴。你可以知道他人在做的一些有趣的项目，同时也可以在他人的帮助下解决一些自己遇到的难题！同样的，技术会议对于分享经验以及增长技术大有帮助！ 拥抱 GitHubGitHub是全世界开源项目的标志性建筑物。它是知识以及优质代码的宝库。当你对某项技术自我感觉良好的时候，下一步便是在GitHub中浏览寻找有趣的项目。阅读开源代码，尽可能多的阅读。这样做的话，你能够学到很多东西，比如说： 如何管理规模较大的项目 项目中应用的有趣的库 代码规范以及代码全局设计 文档风格 测试规范 解决诡异问题的方法，以及发现项目中有问题的地方 所有的这些知识都在等待着你去挖掘。有趣的是，这些知识的通过一个简单的标签就可以得到，那就是“好奇心”。 专注学习如果你担心上述的学习过程太迟缓，那么你也可以尝试一下快速学习模式。你或许听说过“24小时学会某某某”，但是这种方式不是我所推荐的。我认为更合理的是用几周的时间去学习。你可以尝试一下类似“七周学会七种语言”或者是“七周学会七种数据库”等学习方法。尽管这些讲的是语言以及数据库方面的学习，但是你在学习其他技术的时候也可以运用这种思维。 有一个不太相同的学习风格是“困难学习模式”，这种观点的前提是没有人可以真正掌握一门技术，除非每天都练习。所以，想要成为专家，你就需要不停地进行练习。异曲同工的是你可以查看Katas 和 Koans，他鼓励的使用你学的知识来解决问题。这些可以让你更好地入门以及接受那些陌生的概念，勇敢走出自己的舒适区，开始学习新知识！ 学习一门交叉的技能编程是一项左脑的运动，它利用的是大脑的分析能力，一步一步地寻找解决问题的方法。为了发挥右脑的功能，你可以尝试从事一些创造性的活动，比如说画画、3D建模、折纸、乐器甚至是制作家庭相册等。事实上，编程同样需要大量的创造力。或许你曾经遇到过类似的事情，你在睡梦中找到了问题的解决方案。这是因为你的右脑处理问题的方式很不同，它可以从各种地方获得信息。敏捷开发权威人士Andy Hunt就这个话题写了一本书《程序员的思维修炼》。如果你想点燃你的每一个神经元，建议你开始学习一门交叉的技能。 不害怕探索陌生程序语言接触新专案或是转换工作跑道时，都有可能需要学习全然陌生的程序语言，许多人对此感到害怕，甚至未尝试就先放弃。其中，跳脱舒适圈的恐惧往往多于学习程序，会担心是否无法重现过去工作的好表现，甚至因此怀疑自身能力。 不论是多厉害的工程师，一定都有起点，就像打造Microsoft Windows基础的微软资深工程师Dave Cutler为文组出身，没受过正式电脑科学教育，比起同辈花更多时间在错误中学习。 在这之中，最重要的两个关键为具备「成长心态」（growth-mindset）而非「固守心态」（fixed-mindset），以及「乐于学习」（optimize for learning）的态度。 学习陌生程序语言这项关键能力会越练越上手，并让你在学习过程中成为更好的程序设计师。 精通Debug为什麽程序跑出来和我预期的不一样？是许多工程师会遇到的问题。Debug能力往往是影响工程师是否能顺利完成专案的关键因素，却被大部分人低估。 Debug的系统性思考如下： 先假设造成bug的可能原因。 若假设为真，界定此假设可能导致的结果。 试著检视是否有和这些结果衝突的现象。 若有衝突表示假设错误，要重複上述思考过程。 由此可知，想加快Debug速度，要提升「提出假设」和「检视假设」的能力。假设能力可随著Debug经验的累积而提升，检视能力则需加强善用检测工具的技能。 在此过程，必须先假设所有东西都是可检视的，并找出可用来检测或加快检测速度的工具或机制，千万不要只用自己熟悉的工具。 开发节省时间的工具减少时间做那些电脑就可做的工作，例如开发节省时间的工具和使工作流程自动化。 曾负责Facebook软件基础建设团队的软件工程师Bobby Johnson，带领该团队从6人成长至超过1百人。他观察到，团队中表现出色的人多数写了许多工具，这些看似和绩效无直接相关的工具开发时间可能佔三分之一的工作时间，却因此大大提升工作效率，其中包含用来部署程序、监测系统，以及其他可节省时间的工具。 优化重複性工作的速度软件工程师每天可能要搜寻、浏览函数定义很多次，善用键盘快捷键可省下可观的时间。 例如，每次搜寻需花12秒，类似的步骤每天要重複20次，若用快捷键可将搜寻时间缩短到2秒，一年下来即省了40个小时。其他状况如每次Debug都需要在不同装置测试，除了要分别打开app，还要设定测试情境，这时候就可以思考如何加快这类重複性工作的速度。 发展系统性思考模式写完程序码、让程序可运作仅是冰山一角，要产出真正有价值的程序，必须从程序本身提升到整个系统来思考。 你的程序和其他程序库以及其他人写的功能是否相容？ 程序是否测试完成，并确保其他成员可执行你写的这些功能？ 部署你的程序需要改变哪些生产环境？ 新程序对其他正在运作的系统是否有负面影响？ 客户和使用者的新程序使用情况是否如预期？ 新程序是否达到公司期待的效果？ 固定型思维模式改变的四个方法。对称赞和成功进行认知转换第一，对称赞和成功进行认知转换。转换对称赞的认知，我的意思是当你获得错误方式的称赞时，将它们转换为有利成长型思维模式的称赞。因此如果有人说“哇，你的工作做得真好，你太聪明了！”，你可以将它转换为“耶!太好了，我在这个项目中真努力！”。你没必要大声地喊出来！但是认知转换能让你提高寻求挑战和付出努力的主动性！ 你可以在成功或成就中采用相同的方式。当一些事情进行的顺利的时候，不要觉得“当然会做的很好因为我聪明啊”，而是想“我在这个项目中采用了一个有效的方法！我应该更多地去应用这个方法”。 转换对失败的认知第二，转换对失败的认知。当然这个方法的另一面也非常有效。固定型思维模式和成长型思维模式的很大一部分是你怎样应对失败。当你面对挫折或者没有得到你想要的结果时，你的内心戏是怎么样的？如果你觉得“可能我确实不适合这份工作”，这时应该用红色小旗做标识。与此相反，你应该问问你从你的失败中得到了什么或者哪种学习方式你需要改变。这个方法听起来很平常，但是真的很有用。 为挑战庆幸第三，为挑战庆幸。当你必须竞争的时候你是什么样的反应？试着为此感到庆幸。这是我在Recurse Center工作时始终坚持的习惯。一些人会坐在我旁边说：“我遇到一个奇葩的Python bug（叹气）”。 我说：“太好了，我就喜欢奇葩的python bugs！”。首先，让我们来说说，有一点是清楚的——当你遇到一个奇葩的bug，相对于bug本身更重要的是，这说明你找到了一些可以通过努力获得成就感的事情，这些事情是你可遇不可求的。 像我提到的一样，在Recurse Center没有交付日期，没有任务分配，因此这种心态是无需付出任何代价的。我一般会说“你可以花一天时间在Flask（python的一个框架）上追踪这个bug，多好啊！”现在，在Dropbox（一种云存储服务）上，我们有一个产品要开发，有交付日期和相应用户。我不能总是一味地为花一天时间来为追踪bug感到高兴。因此，我对身处有交付日期的现实中的人们深感同情。然而，如果我必须修复一个漏洞，我承认bug的存在不利于我对漏洞的修复。但是在没有交付日期的情况下，你仍然可以采用我的态度。 关注过程第四，关注过程。跟很多人一样，我同一些优秀的工程师一起工作。有时，我会试着用不合理的方式修复一些棘手的bug，但是有些人能够以正确的方式修复。在这种情况下，我会习惯性地问他们怎么做到的。尤其当我刚用Dropbox的时候，他们的回答会很有启发性。有时，他们回答的一些信息来自于我根本不知道的知识中。现在，我在这里待得久了，经常看到和别人技术和方法上的不同，或者发现一些自己的方式之所以不能成功的细节。 这种方法对于总是觉得：“这个人能解决这个bug一定是个天才！”的一类人，是长期最有效的。 总结掌握一门新技术振奋人心，这是一项影响你思维的新的体验。但是首先，你必须克服你的惯性，一旦你做到了，你便开启了从web的每个角落学习知识的旅程。我希望上面讲的十点能够给你的旅程带来一些帮助或启发。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[关于Linux问题的解决办法]]></title>
      <url>%2F%E5%85%B3%E4%BA%8ELinux%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html</url>
      <content type="text"><![CDATA[关于Linux问题的解决办法 我安装win10和Debian系的linux双系统，以这个双系统为基础，解决linux问题。 关于win10更新之后，重新启动没有windows的引导的问题解决方法： 进入Linux操作系统，打开命令行 输入 su 切换root用户 输入apt-get updateupdate-grub 重启系统，出现windows的引导 关于当前使用用户不在sudoers文件中，无法使用sudo命令的问题解决方法： 切换到超级用户root su 查看/etc/sudoers权限，可以看到当前权限为440 ls -all /etc/sudoers出现下列： -r–r—– 1 root root 744 6月 8 10:29 /etc/sudoers 更改权限为777 chmod 777 /etc/sudoers 编辑/etc/sudoers vi /etc/sudoers 在root ALL=(ALL:ALL) ALL 下面添加一行 user ALL=(ALL)ALL 然后保存退出。 解释：第一个ALL是指网络中的主机，我们后面把它改成了主机名，它指明user可以在此主机上执行后面的命令。 第二个括号里的ALL是指目标用户，也就是以谁的身份去执行命令。 最后一个ALL当然就是指命令名了。 把/etc/sudoers权限改回440 chmod 440 /etc/sudoers 操作完成,可以使用sudo命令 Linux中GRUB引导故障的修复解决方法： 需要用usb做个Debian的系统安装盘 从usb启动，进入debian的修复模式，进入终端 fdisk -l 查看分区情况 需要识别出分区与原文件系统的挂接关系 /dev/sda7 swp /dev/sda8 / /dev/sda9 /home /dev/sda10 /boot 把与目录/对应的分区/dev/sda8挂在/mnt上，把与目录home对应的分区/dev/sda9挂在/mnt/home上， 把/dev挂在/mnt/dev上 输入命令chroot /mnt 输入命令grub-install /dev/sda 重启，出现引导 进入系统, su update-grub 重启，进入系统]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[格局]]></title>
      <url>%2F%E6%A0%BC%E5%B1%80.html</url>
      <content type="text"><![CDATA[格局如果把人生当做一盘棋，那么人生的结局就由这盘棋的格局决定。想要赢得人生这盘棋的胜利，关键在于把握住棋局。 一个人的格局大小与否说实话是很难定义的，但是一个人是否拥有广阔胸襟却对自己以及周围的人影响很大。 胸怀的大小会让你看见不一样的世界，会让你寻找到生活中旁人看不到的风景。 你是什么样的人，你就会和什么样的人交朋友，这句话还是很有道理的。 做人智商高不高没关系，情商高不高也问题不大，但做人的格局一定要大，说白了，你可以不聪明，也可以不懂交际，但一定要大气。 “再大的烙饼也大不过烙它的锅。”你可以烙出大饼来，但是你烙出的饼再大，它也得受烙它的那口锅的限制。 我们所希望的未来就好像这张大饼一样，是否能烙出满意的“大饼”，完全取决于烙它的那口“锅”。 这就是所谓的“格局”。 格局就是指一个人的眼光、胸襟、胆识、心理等要素的内在布局。 有一个乞丐，整天在街上乞讨，对路上衣着光鲜的人毫无感觉，却嫉妒比自己乞讨得多的乞丐，这人估计一直就是个乞丐了。 一个人的发展往往受局限，其实“局限”就是格局太小，为其所限。谋大事者必要布大局，对于人生这盘棋来说，我们首先要学习的不是技巧，而是布局。 大格局，即以大视角切入人生，力求站得更高、看得更远、做得更大。大格局决定着事情发展的方向，掌控了大格局，也就掌控了局势。 为什么别人会有大格局？ 有的人说，站的高才能看的远；也有人说，欲为大树，莫于草争；有人说，格局即大局观了；有人说，大格局就是大胸怀；还有人说，大格局就是看的远。 不过，事物也本无对错之分。站的高，确实是能够看的远。有大格局的人确实也不会斤斤计较，有大格局的也往往看的远。 很多人认为，后天的成就主要靠自己。虽说，一个人是否有作为，后天的努力占了很大的部分。但是，先天性的环境因素占了很大一部分。 试想，如果你从小生活在一个资源匮乏的环境，眼界往往不够开阔，总是为基本的生活而操劳，哪来格局。但是，即便是有的人生活在资源充沛的环境，也见过大世面，也并不一定有大格局。但是，可以肯定的是格局受环境影响很大。而我们大部分人，其实总体生活的环境本质差异并非太大。 眼光 眼光是指在某一时刻，对某领域趋势准确预测的能力。 第一，你能不能看到别人看不到的东西，能不能够透过表象看到事物发展的本质。 第二，对于事物的评判已经有自己的标准，并能够极为准确根据现在对未来进行预测。 第三，是你知道这些道理之后，自己能不能做得到。 人贵有自知之明，知道什么可为和不可为。若不可为，怎样做才能可为，那何时可为。 胸襟人的胸怀很有意思，有大的追求，大的愿望，就会有大的忍耐，大的包容，大的视野，大的宽容，这就叫大胸怀吧。 如果你的想法是追求一个具体的、很小的事情，你得不到它会很生气；如果你想要的是别人没有的，是很大的东西，很远的东西，你就会变得能够理解很多，包容很多，能够承受痛苦，甚至伤害你的事情你也能够包容。这是一个正循环。 如果一点点挫折就让你爬不起来，如果一两句坏话、就让你不能释怀，如果动不动就讨厌人，憎恨人，那格局就太小了。 做人有多大气，就会有多成功。因为胸襟，才是成功者的标志。 胆识曾有企业家这样说，“如果是现在把我归零，我仍然可以再来一次”。然而，史玉柱则是在资产为负数，甚至负得还很多的时候站了起来。 应该说，他是中国迄今为止唯一经历了“大起——大落——又大起”这样一个完整过程的著名企业家，他创造了一个中国乃至全球经济史上绝无仅有的传奇故事。 当巨人大厦倒塌，讨债人蜂拥而至之时，史玉柱庄重承诺：“欠老百姓的钱一定要还。”也正是出于这种“还债”的动力，史玉柱终于东山再起，且赚钱后的第一件事情就是还债。 行军作战需要胆识，成功创业更需要胆识，只有想法却不敢去实现终究不会成功，莽撞行事也只会导致失败，有勇有谋才能事半功倍。 拥有大格局者： 有开阔的心胸 没有因环境的不利而妄自菲薄 更没有因为能力的不足而自暴自弃。 拥有小格局者： 往往会因为生活的不如意而怨天尤人 因为一点小的挫折就一筹莫展 看待问题的时候常常是一叶障目不见泰山，成为碌碌无为的人。局不够大，人生成就再高也有限！ 总结所以说，格局真的决定人生层次。 格局在岳飞那里就是八千里路云和月，三千功名尘与土的壮烈； 格局在马致远那里却是小桥流水人家，断肠人在天涯的孤旅； 格局在苏轼那里就是我欲乘风归去，又恐琼楼玉宇，高处不胜寒的的寂寞； 格局在柳永那里就是杨柳岸，晓风残月，衣带渐宽终不悔，为伊消得人憔悴的烟花柳巷而已。 一个人有多大的格局才有多大的胸襟。格局是一种眼界，是一种大情怀，海纳百川才能有容乃大。 什么样的眼界和胸襟才能看到更远的风景，站在高处，整座城市不过就是几座楼房，在飞机上从云端俯瞰城市，城市也就变成了盆景。 放下你的浮躁，放下你的懒惰，放下你的三分钟热度，放空你禁不住诱惑的大脑，放开你容易被任何事物吸引的眼睛，放淡你什么都想聊两句八卦的嘴巴，静下心来好好做你该做的事，该好好努力了!有时候真的努力后，你会发现自己要比想象的优秀很多。 世上除了生死，其它都是小事。不管遇到了什么烦心事，都不要自己为难自己;无论今天发生多么糟糕的事，都不要对生活失望，因为还有明天。 有目标的人在奔跑，没目标的人在流浪，因为不知道要去哪里! 有目标的人在感恩，没目标的人在报怨，因为觉得全世界都欠他的! 有目标的人睡不着，没目标的人睡不醒，因为不知道起来去干嘛! 生命只有走出来的精彩，没有等待出来的辉煌! 如果，感到此时的自己很辛苦，那告诉自己：容易走的都是下坡路!坚持住，因为你正在走上坡路，走过去，你就一定会有进步。 如果，你正在埋怨命运不眷顾，那请记住：命，是失败者的借口;运，是成功者的谦词。命虽由天定，但埋怨，只是一种懦弱的表现;努力，才是人生的态度!相信你可以! 记住一句话：越努力，越幸运。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[用GitHub和hexo搭建个人主站]]></title>
      <url>%2F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E7%AB%99.html</url>
      <content type="text"><![CDATA[用GitHub和hexo搭建个人主站作为一个程序员，拥有一个自己的博客，平时记录一下，分享点技术文章，是很有必要的。建立博客的通常渠道包括： 在博客平台上注册，比如 博客园、CSDN、新浪博客 等。 利用博客框架搭建，如 WordPress、Jekyll、hexo 等。 自己用代码写一个。 其中，第一种最简单，也最受限，说不定还会被删帖删号。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多程序员的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。 下面我们就来看下第二种搭建博客的方式。 github＋hexo 建立你的第一个博客 部署博客及更新博文 安装自己喜欢的主题 购买并绑定域名 前言其实呢，建立博客是非常简单的（哈哈，不管什么东西，你会的就觉得简单，不会的怎样都难），我来给大家说说如何使用 GitHubPages 和 Hexo 建立自己的博客。 这个有一点难度，但是不要怕，我会一步一步的给大家完成指导的，如果有任何问题也可以随时联系我，我会尽力给大家解决的！ 第一步：github＋hexo 建立你的第一个博客下面先介绍为何选择 GitHubPages 和 Hexo 来搭建博客，然后介绍搭建博客的详细过程。 Why GitHub Pages and Hexo 因为 GitHub 的存在，我们得以简单快速地搭建个人博客。 GitHub，是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。 GitHub Pages，是用来托管 GitHub 上静态网页的免费站点，那 GitHub Pages具体有哪些功能呢： 有 300M 免费空间，资料自己管理，保存可靠； 享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多； 可以使用很多现成的博客框架，搭建过程简单快速。 Hexo 是一个简单、快速、强大的静态博客框架,出自台湾大学生 tommy351 之手。我也试过使用 Jekyll搭建个人博客的过程，确实要繁琐许多。相比之下 Hexo 更轻便更快捷，下面是其官网强调的四大特点： 极速生成静态页面 一键部署博客 丰富的插件支持 支持 Markdown 大家对 GitHub Pages 和 Hexo 有了一定的了解，下面进入正题。 使用 GitHub Pages 建立博客站点注册 GitHub访问 GitHub，注册十分简单，一定要记住注册时使用的邮箱，因为 GitHub 上很多通知都是通过邮箱的。申请成功后，在 GitHub 官网上登录，并验证邮箱即可。 在 GitHub 上建立仓库与 GitHub 建立好连接之后，就可以方便的使用它提供的 Pages 服务，GitHub Pages 分两种，一种是用你的 GitHub 用户名建立的 username.github.io 这样的用户&amp;组织站点，另一种是依附项目的 Pages。 想建立个人博客是用的第一种，形如 【username.github.io】 这样的可访问的站点，每个用户名下面只能建立一个。建立仓库的方法参照github官网的教程。 搭建环境安装软件 Node.js下载完成后根据提示一步一步安装就好，这个没有什么需要特别说明的。 GitHub for Windows下载并安装这个软件，一直点击下一步即可 git 使用GitHub for Windows登录GitHub配置 SSH 我们如何让本地 git 项目与远程的 GitHub 建立联系呢？方法是用 SSH。 打开命令行，输入以下命令：ssh -T git@github.com 如果是下面之类的反馈（或者显示 Hi xxx）：The authenticity of host &#39;github.com &#39; can&#39;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)?不用紧张，输入 yes 之后就配置成功了。 使用 Hexo 创建博客框架Hexo 安装 Node和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。 打开git bash命令行，输入命令：npm install -g hexo Hexo 部署 Hexo 的部署输入命令：hexo init 部署成功之后，用hexo生成静态页面，输入命令：hexo generate或者hexo g也可以 此时在本地进行预览（在刚才创建的blog文件夹里）,输入命令：hexo server或者hexo s 此时打开浏览器，在浏览器地址栏输入 http://localhost:4000/ （默认端口为4000）, 便可以看到最原始的博客了。 以后发表博文想先预览，也可以通过 hexo server 在本地先跑起来，看看效果。 在 Git Shell 中按 Ctrl+c 可以停止该服务。 配置Github建立Repository 建立与你用户名对应的仓库，仓库名必须为【username.github.io】，这是固定写法 然后建立关系，找到之前建立的blog文件夹，之前建的东西也全在这里面，有： _config.yml node_modules public source db.json package.json scaffolds themes 现在我们需要修改_config.yml文件，来建立关联，使用notepad++打开_config.yml文件 翻到最下面，改成这样： deploy: type: git repo: https://github.com/username/username.github.io.git branch: master 注：username为你的用户名 然后执行命令：npm install hexo-deployer-git --save 然后，执行配置命令：hexo deploy 然后在浏览器中输入http://username.github.io/ 就行了。 部署步骤每次部署的步骤，可按以下三步来进行： `hexo clean` `hexo generate` `hexo deploy` 报错总结ERROR Deployer not found: git 或者 ERROR Deployer not found: github 解决方法：npm install hexo-deployer-git --save 如发生报错： ERROR Process failed: layout/.DS_Store 那么进入主题里面layout和_partial目录下，使用删除命令：rm-rf.DS_Store ERROR Plugin load failed: hexo-server 原因： Besides,utilities are separated into a standalone module.hexo.util is not reachable anymore. 解决方法:npm install hexo-server 执行命令hexo server，提示：Usage: hexo .... 原因： 我认为是没有生成本地服务 解决方法:npm install hexo-server --save 提示：hexo-server@0.1.2 node_modules/hexo-server .... 表示成功了参考 这个时候再执行：hexo-server 得到: INFOHexois running at http://0.0.0.0:4000/.PressCtrl+C to stop. 这个时候再点击http://0.0.0.0:4000, 正常情况下应该是最原始的画面。 这个时候再重新生成静态文件，命令：hexo generate或hexo g 启动本地服务器：hexo server或hexo s 本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。 第二步：部署博客及更新博文在blog文件夹下将博客放入public文件夹中 在blog文件夹下打开git bash，按以下三步进行： `hexo clean` `hexo g` `hexo d` 第三步：安装主题我安装的是nexT主题，可参考主题作者在GitHub的READMEnexT 还有我比较喜欢的主题 yilia 第四步：购买并绑定域名购买域名我是在万网上购买的域名，越出名的后缀越贵，看自己吧，比如.com .cn .net这些域名还需要备案，否则用不了。万网 绑定域名创建CNAME。 登陆访问github。 进入github中需要关联域名的相应项目。 在该项目下创建CNAME，其CNAME内容即是域名 前往你的DNS服务商 进入”新增解析”界面。 在万网首页点击【进入会员中心】→ 点击【产品管理】下的【域名解析】→ 进入【域名列表】界面 → 点击域名→ 进入【新增解析】界面。 设置域名解析记录。 点击【新增解析】；依次填写相应内容。 “记录类型”选择A；”主机记录”填写www；”解析线路”选择默认； “记录值”填写github提供的IP地址，192.30.252.153或192.30.252.154； “TTL”默认10分钟，自己可以另行设置也可； 最后点击【保存】。 验证域名与github关联是否成功。 先以github的链接方式访问一次，查看界面；再以域名的方式访问一次，查看界面；两者所查看到的界面是一致。 注：若域名不能立即访问，需等待一段时间再访问。当github成功关联到域名后，以github的链接方式进行访问，其会自动转化为域名访问。 参考博客：潘柏信的博客 百度]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[用Atom编辑markdown笔记]]></title>
      <url>%2Fatom%E7%BC%96%E8%BE%91markdown.html</url>
      <content type="text"><![CDATA[用Atom编辑markdown笔记简述Atom是github开发的开源跨平台的编辑器，Atom的强大可以与大名鼎鼎的Sublime Text相媲美。因为使用过Sublime Text，所以用Atom上手很快。这篇文章主要介绍使用Atom写markdown。 之前在项目开发中都是使用.doc文件作为接口文档的载体，但是在使用中并不能很好的对比接口修改，如果使用.txt文件，又没有醒目的格式。所以，选择语法简单，方便对比的markdown来作为接口文档的载体。主要介绍下书写和解析markdown的编辑器。 编辑器的选择任何文本编辑器都可以书写markdown，但我们更期望能够在书写的时候能够即时的看到解析效果，方便对格式进行调整。 mac os在mac os 下，我推荐Mou，界面简洁优雅，解析流畅，也许没有更好的了。 windows os Sublime Text：有markdown preview插件支持，能够在浏览器里查看编译效果，但是并不是实时的，需要在修改后进行刷新或者，并不方便。 mardown pad：能够很好的书写，并支持预览，但收费。 Atom：推荐使用。内置对markdown的支持，能够方便的进行解析预览。 使用Atom预览markdown 打开任意.md文件(markdown源文件) windows : ctrl + shift + p mac : command + shift + p 这条命令跟Sublime Text是一样的，打开命令输入框 输入 markdown preview toggle(可以只输入mdpt，跟Sublime Text一样支持模糊匹配) 按enter键即可看到预览，左边编辑，右边实时预览。 也可以直接用快捷键ctrl + shift + m 使用Atom编写markdown的特性以下几个特性是我选择Atom的主要原因： Markdown实时预览 使用Crtl+Shift+M开启 Markdown代码高亮 比Mou的代码高亮效果好多了 多文件管理 Atom提供了文件树列表的功能（IDE中常见） Github紧密结合 多平台支持 Mou只支持Mac OS Atom插件管理工具：使用apm install 插件名称， 可以很方便的安装插件。 常用快捷键以下是Mac OS平台的常用快捷键： Command+Shift+P 打开命令窗口，可以运行各种菜单功能 Command + T 快速多文件切换 Command + G 文件内跳转到指定行 Command + F 文件内查找和替换 Command + Shift + F 多文件查找和替换 Command + [ 对选中内容向左缩进 Command + ] 对选中内容向右缩进 Markdown网上编辑推荐：马克飞象 Atom下载Atom下载]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[学习方法总结]]></title>
      <url>%2F%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.html</url>
      <content type="text"><![CDATA[学习方法总结学习的三要素 规范的学习行为 良好的学习习惯 有效的学习方法 学习能力的三要素又可分为八大学习环节，即学习管理八环节 计划管理 预习管理 听课管理 复习管理 作业管理 错题管理 难题管理 考试管理 一个人学习成绩的优劣取决于他的学习能力，学习能力包括三个要素：规范的学习行为；良好的学习习惯；有效的学习方法。有了规范的学习行为才能培养出良好的学习习惯，形成了良好的学习习惯就会形成适合自己的有效学习方法，三者是相辅相成的，规范的学习行为是前提，是基础。 过程不变结果不变，过程改变结果巨变，过程合理成绩斐然！ 实践证明：一个行为持续30天以上，就会形成稳定的行为，超过100天就可以形成习惯。 一、计划管理——有规律 长计划，短安排。在制定一个相对较长期目标的同时，一定要制定一个短期学习目标，这个目标要切合自己的实际，通过努力是完全可以实现的。达到了一个目标后，再制定下一个目标，确保一个目标一个目标的实现。 挤时间，讲效率。重要的是进行时间上的通盘计划，制定较为详细的课后时间安排计划表，课后时间要充分利用，合理安排，严格遵守，坚持下去，形成习惯。计划表要按照时间和内容顺序，把放学回家后自己的吃饭、休息、学习时间安排一下，学习时间以45分钟为一节，中间休息10分钟，下午第四节若为自习课也列入计划表内。 二、预习管理――争主动 读：每科用10分钟左右的时间通读教材，对不理解的内容记录下来，这是你明天上课要重点听的内容。预习的目的是要形成问题，带着问题听课，当你的问题在脑中形成后，第二天听课就会集中精力听教师讲这个地方。所以，发现不明白之处你要写在预习本上。 ——建立预习本 写：预习时将模糊的、有障碍的、思维上的断点（不明白之处）书写下来。――读写同步走 练：预习的最高层次是练习，预习要体现在练习上，就是做课后能体现双基要求的练习题1到2道。做题时若你会做了，说明你的自学能力在提高，若不会做，没关系，很正常，因为老师没讲。——记录问题 事实证明：不预习当堂懂的在50％――60％左右，而预习后懂的则能在80％――90％左右。 三、听课管理――重效益听课必须做到跟老师，抓重点，当堂懂。听课时要跟着老师的思维走，不预习跟不上。跟老师的目的是抓重点，抓公共重点，如：定理、公式、单词、句型,更重要的是抓自己个性化的重点，抓自己预习中不懂之处。当堂没听懂的知识当堂问懂、研究懂。―建立听课笔记本 四、复习管理――讲方法有效复习的核心是做到五个字：想、查、看、写、说 想：即回想，回忆，是闭着眼睛想，在大脑中放电影。学生课后最需要做的就是是回想。此过程非常重要，几乎所有清华生、北大生、高考状元都是这样做的。学生应在每天晚上临睡前安排一定时间回想。 查：回想是目前联合国教科文组织承认的最有效的复习方法，也是查漏补缺的最好方法。回想时，有些会非常清楚地想出来，有些则模糊，甚至一点也想不起来。能想起来的，说明你已经很好地复习了一遍。通过这样间隔性的2－3遍，几乎终生不忘。而模糊和完全想不起来的就是漏缺部分，需要从头再学。 看：即看课本，看听课笔记。既要有面，更要有点。这个点，既包括课程内容上的重点，也包括回忆的时候没有想起来、较模糊的“漏缺”点。 写：随时记下重难点、漏缺点。一定要在笔记中把它详细整理，并做上记号，以便总复习的时候，注意复习这部分内容。―建立复习本 说：就是复述。如：每天都复述一下自己学过的知识，每周末复述一下自己一周内学过的知识。听明白不是真的明白，说明白才是真的明白。坚持2～3个月就会记忆力好，概括能力、领悟能力提高，表达能力增强，写作能力突飞猛进。―此法用于预习和复习 五、作业管理――要自律 不计时不作业：限时作业，记录作业时间，与作业无关的事什么也不做。比如：20分钟写完英语；25分钟写完数学。 不复习不作业：先复习所学的内容，然后作业。 遇到难题，百思不得，先放过，后攻坚。 不检查不作业：作业后必须检查一遍。 不小结不作业：写完作业后，告诉自己学会了什么，得到了什么，有什么体会。 独立作业忌抄袭。 六、错题管理――常反思 有了错题本和难题本就叫会考试，目的是为以后复习使用。错题和难题反映着许多知识点的联结，掌握了错题和难题就等于把高分拿在手。 建立错题本和难题本可用16K的横格本，每页上下分五部分。 第一部分是原题 第二部分是错因 第三部分是改正确与举一反三：正确即写出正确答案，过了一个月复习时，搭眼一看还不会，就问自己：怎么还不会？就要进一步查找原因，这时举一反三，将与本题相关的知识点或习题联系起来，写下来 第四部分是归纳提醒：写出错题错在什么地方，如：错在代数方面，则提醒自己这部分掌握不好，重新自学或请教老师和同学 第五部分是复习次数：每隔一段时间要复习一次，怎么复习？盖住原题自己用脑子想。―此法比较适用于理科 七、难题管理——会溯源 一般来说，难题之难多半在于题目所涉知识点众多，知识点之间关系错综复杂，思维（及方法运用）跳跃性大、逻辑性强，因此，对于难题，建议用溯源的方法整理。 一是查清楚题目所需知识清单，同步辨清知识间的内在联系 二是复原自己考试时的思维路径，查“堵”点、“歧”点 三是借助参考答案探究自身存在的盲点疑点甚至是漏点。之后，同样需要每隔一段时间复习与检查一次。 八、考试管理――抓重点 用一张丢分统计表管理。按科目分为填空、选择、计算、阅读……项目。错了、丢了多少分，用统计表说话，这样，就能明白哪些是审题出了偏差，哪些是运算出了错误，是什么知识点有问题，哪方面需改进和提高。用纸把错题抄下来，每隔20天再做一遍，尤其是在考试前可找出考点。――考前拿出专门时间做错题难题本上的题]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PHP编辑器整理]]></title>
      <url>%2Fphp%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86.html</url>
      <content type="text"><![CDATA[PHP编辑器整理第一：EclipseEclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具。虽然大多数用户很乐于将Eclipse 当作Java 集成开发环境（IDE）来使用，但Eclipse 的目标却不仅限于此。Eclipse 还包括插件开发环境（Plug-in Development Environment，PDE），这个组件主要针对希望扩展Eclipse 的软件开发人员，因为它允许他们构建与Eclipse 环境无缝集成的工具。由于Eclipse 中的每样东西都是插件，对于给Eclipse 提供插件，以及给用户提供一致和统一的集成开发环境而言，所有工具开发人员都具有同等的发挥场所。 P.S：程序员用Eclipse的话，有代码自动缩进、补全功能，有方法跳转，相同变量提醒。另外其实phpstorm、sublime 都还不错。看个人喜好。 第二：PHPstormPhpStorm是一个轻量级且便捷的PHP IDE，其旨在提供用户效率，可深刻理解用户的编码，提供智能代码补全，快速导航以及即时错误检查。PHPstorm优点： 跨平台。 对PHP支持refactor功能。 自动生成phpdoc的注释，非常方便进行大型编程。 内置支持Zencode。 生成类的继承关系图，如果有一个类，多次继承之后，可以通过这个功能查看他所有的父级关系。 支持代码重构，方便修改代码。 拥有本地历史记录功能（local history功能）。 方便的部署，可以直接将代码直接upload到服务器。 补充：phpstrom下的vim模式。大家一般都用vim，用的精通了都感觉效率高。但用了之后插件装了一大堆。而且框架目录层太深，用vim导航，找文件就很尴尬，于是尝试了phpstorm，但是，习惯了vim的跳转，光标移动等等，偶然发现phpstorm还有vim模式，基本可以兼容vim的常用编辑操作，同时也可以享受到phpstrom其他强大的功能，如函数跳转（个人认为最强大的地方）、文件搜索等等。 PS：搞PHP，必用PHPStorm，这可以说是神器！它的不足之处，内存太大。有的时候公司电脑不行，电脑配置是跟不上的，还有就是PHPstorm，功能全，该有的都有，比较适合偷懒程序员用。 第三：sublime TextSublime Text 不仅是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。它最初被设计为一个具有丰富扩展功能的Vim。Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的Python API，Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。 Sublime Text优点： 主流前端开发编辑器 体积较小，运行速度快 文本功能强大 支持编译功能且可在控制台看到输出 内嵌python解释器支持插件开发以达到可扩展目的 Package Control：ST支持的大量插件可通过其进行管理[3] 第四：EditPlusEditPlus是一款由韩国Sangil Kim （ES-Computing）出品的小巧但是功能强大的可处理文本、HTML和程序语言的Windows编辑器，你甚至可以通过设置用户工具将其作为C,Java,Php等等语言的一个简单的IDE。 EditPlus（文字编辑器）汉化版是一套功能强大，可取代记事本的文字编辑器，拥有无限制的撤消与重做、英文拼字检查、自动换行、列数标记、搜寻取代、同时编辑多文件、全屏幕浏览功能。而它还有一个好用的功能，就是它有监视剪贴板的功能，同步于剪贴板可自动粘贴进EditPlus 的窗口中省去粘贴的步骤。另外它也是一个非常好用的HTML编辑器，它除了支持颜色标记、HTML 标记，同时支持C、C++、Perl、Java，另外，它还内建完整的HTML &amp; CSS1 指令功能，对于习惯用记事本编辑网页的朋友，它可帮你节省一半以上的网页制作时间，若你有安装IE3.0 以上版本，它还会结合IE浏览器于EditPlus 窗口中，让你可以直接预览编辑好的网页（若没安装IE，也可指定浏览器路径）。因此，它是一个相当棒又多用途多状态的编辑软件。 P.S：经常用到EditPlus里面的ftp功能，在线编辑代码，很合适！用Editplus编辑器感觉有点异类。 第五：notepad++Notepad++是Windows操作系统下的一套文本编辑器(软件版权许可证: GPL)，有完整的中文化接口及支持多国语言编写的功能(UTF8技术)。Notepad++功能比Windows 中的Notepad(记事本)强大，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。Notepad++ 不仅有语法高亮度显示，也有语法折叠功能，并且支持宏以及扩充基本功能的外挂模组。Notepad++是免费软件，可以免费使用，自带中文，支持众多计算机程序语言:C,C++,Java,pascal,C#,XML,SQL,Ada,HTML,PHP,ASP, AutoIt,汇编, DOS批处理, Caml, COBOL, Cmake, CSS,D, Diff,Action, Fortran,Gui4Cli, HTML, Haskell,INNO, JSP,KIXtart, LISP, Lua, Make处理(Makefile), Matlab, INI文件, MS-DOSStyle, NSIS, Normal text, Objective-C, Pascal,Python, Java,Verilog,Haskell,InnoSetup,CMake,VHDL,AutoIt,Matlabnotepad++的优点：比windows自带的记事本强一点，因为能显示括号跟颜色，用这个写代码速度最快，因为与复杂的编辑器相比，打开跟关闭还有电脑卡的效率已经远远低于编辑器能提供的辅助的效率。 P．S：Notepad++ 快速而且简单，还在用NetBeans的话有个缺点就是html的模板，如果有thinkphp的模板标签html标记的起始结束符高亮就失效了，只能等待更新之前用的netbeans 后来netbeans开大项目有点卡换成了Notepad++。 总结：PHP 编辑工具其实挺多的，以至于很多php程序员无从下手。很多同事常用的编辑器phpstorm，Notepad++，PhpStorm，editplus;等等，工欲善其事，必先利其器，用熟用精一款编辑器就行，自己顺手才是最舒服的。一开始初学的时候用editplus;后来又用editplus;最后用vim ，其实用eclipse次数比较多，喜欢自己装插件，插件很多，大项目常用。平时自己开发小项目，学习用notepad++,editplus，公司电脑内存小，可以用Sublime。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[健身七大黄金动作]]></title>
      <url>%2F%E5%81%A5%E8%BA%AB%E4%B8%83%E5%A4%A7%E9%BB%84%E9%87%91%E5%8A%A8%E4%BD%9C.html</url>
      <content type="text"><![CDATA[健身七大黄金动作 在健身房中有一些经典的训练动作，他们被称为最有效的黄金动作！并且每个动作都有它不同伟大的作用。当然这些动作也是你必须掌握的训练动作！ 一、卧推卧推是练上肢，特别是胸部的最佳动作，是其它很多动作无法比拟的，卧推是健身房里最受人喜爱的训练动作。 动作过程将杠铃垂直上举至两臂完全伸直，胸肌彻底收缩，静止一秒钟，两臂慢慢弯屈，杠铃垂直落下，直至横杠接触到胸部（乳头上），然后向上推起至起始位 二、深蹲深蹲是力量和肌肉训练中的王者。深蹲不仅对于构建腿部肌肉有明显的作用，还会核心力量有好处。深蹲简直就是核弹，炸毁你身体上的每一个细胞。 三、硬拉硬拉是健身必练的动作，对增肌和减脂都有无可代替的作用！ 它可以打造全身的块头和力量，对于像硬拉这样的大力气动作来说，用“拉起的越多，肌肉增长的越多”这句话来形容则更为确切。推举的越多就是推举的负重更大，但是这需要精确的动作姿势，这样才可以得到最大的收获和避免受伤。 四、引体向上引体向上是发展上身力量和肌肉体积的王牌力量训练动作之一。任何健身高手的训练菜单里都离不开这个动作！ 虽然看似很简单很常见很普通的动作，但被很多高手称为上半身力量训练之王！ 五、双杠臂屈伸双杠臂屈伸被认为是锻炼上半身经典的的徒手训练动作之一，难度也不小。它能锻炼上半身很多部位的肌肉，包括胸肌、肱三头肌和三角肌（前束）为主，兼练背阔肌、斜方肌等。 这一动作具有多效应的功能，不同的做法会产生不同的锻炼效果。双杠臂屈伸也被人叫做上肢深蹲，他会刺激你的胸肌，三头，三角，帮助你获得结实的上肢。 六、划船划船会集中刺激你的后背，给背部带来超级增长！ 背部大概是身体上最难锻炼到的部分，杠铃划船这是最好的增加背部肌肉质量的运动之一，背阔肌、大圆肌、菱形肌、斜方肌承受了主要负荷，此外还锻炼到二头肌。 七、推举无论是哑铃还是杠铃，推举都会给你的肩部带来无与伦比的刺激。这个动作是很多人练习肩部的时候最喜欢，也最常用的的动作，也是练习三角肌的首选动作之一。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[人生的境界]]></title>
      <url>%2F%E4%BA%BA%E7%94%9F%E7%9A%84%E5%A2%83%E7%95%8C.html</url>
      <content type="text"><![CDATA[人生的境界 人生有四种境界：自然境界、功利境界、道德境界、天地境界。—中国哲学家冯友兰 一、自然境界一个人做事，可能只是顺着他的本能或其社会的风俗习惯。就像小孩和原始人那样，他做他所做的事，然而并无觉解，或不甚觉解。这样，他所做的事，对于他就没有意义，或很少意义。他的人生境界，就是我所说的自然境界。 二、功利境界一个人可能意识到他自己，为自己而做各种事。这并不意味着他必然是不道德的人。他可以做些事，其后果有利于他人，其动机则是利已的。所以他所做的各种事，对于他，有功利的意义。他的人生境界，就是我所说的功利境界。 三、道德境界还有的人，可能了解到社会的存在，他是社会的一员。这个社会是一个整体，他是这个整体的一部分。有这种觉解，他就为社会的利益做各种事，或如儒家所说，他做事是为了”正其义不谋其利”。他真正是有道德的人，他所做的都是符合严格的道德意义的道德行为。他所做的各种事都有道德的意义。所以他的人生境界，是我所说的道德境界。 四、天地境界最后，一个人可能了解到超乎社会整体之上，还有一个更大的整体，即宇宙。他不仅是社会的一员，同时还是宇宙的一员。他是社会组织的公民，同时还是孟子所说的”天民”。有这种觉解，他就为宇宙的利益而做各种事。他了解他所做的事的意义，自觉他正在做他所做的事。这种觉解为他构成了最高的人生境界，就是我所说的天地境界。 总结人与其他动物的不同，在于人做某事时，他了解他在做什么，并且自觉地在做。正是这种觉解，使他正在做的事对于他有了意义。他做各种事，有各种意义，各种意义合成一个整体，就构成他的人生境界。如此构成各人的人生境界，这是我的说法。不同的人可能做相同的事，但是各人的觉解程度不同，所做的事对于他们也就各有不同的意义。每个人各有自己的人生境界，与其他任何个人的都不完全相同。若是不管这些个人的差异，我们可以把各种不同的人生境界划分为四个等级。从最低的说起，它们是：自然境界，功利境界，道德境界，天地境界。 这四种人生境界之中，自然境界、功利境界的人，是人现在就是的人；道德境界、天地境界的人，是人应该成为的人。前两者是自然的产物，后两者是精神的创造。自然境界最低，往上是功利境界，再往上是道德境界，最后是天地境界。它们之所以如此，是由于自然境界，几乎不需要觉解；功利境界、道德境界，需要较多的觉解；天地境界则需要最多的觉解。道德境界有道德价值，天地境界有超道德价值。 照中国哲学的传统，哲学的任务是帮助人达到道德境界和天地境界，特别是达到天地境界。天地境界又可以叫做哲学境界，因为只有通过哲学，获得对宇宙的某些了解，才能达到天地境界。但是道德境界，也是哲学的产物。道德认为，并不单纯是遵循道德律的行为；有道德的人也不单纯是养成某些道德习惯的人。他行动和生活，都必须觉解其中的道德原理，哲学的任务正是给予他这种觉解。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用JavaScript实现焦点轮播图]]></title>
      <url>%2F%E7%94%A8js%E5%AE%9E%E7%8E%B0%E7%84%A6%E7%82%B9%E8%BD%AE%E6%92%AD%E5%9B%BE.html</url>
      <content type="text"><![CDATA[使用JavaScript实现焦点轮播图 原理各大网站都使用焦点轮播图来展示自己的图片，如淘宝、京东等。 焦点轮播图所用技能点：DOM操作、定时器、事件运用、JS动画、函数递归、无限滚动； 无限滚动实现：包含图片的父级标签要有一个属性overflow:hidden 来隐藏超出自身尺寸的内容;有style:left通过控制left值来实现滚动; 图片列表中要在开始和结束位置添加两张相同的附属图，使图片实现无缝连接。 使用html和css实现静态页面布局 父容器要承载图片、圆点下标、左右切换箭头，要让超出部分隐藏overflow：hidden、定位为position：relative； 图片的div要添加定位：position：absolute让它基于父容器relative，z-index：1使图片堆叠在第一层上； 圆点下标和左右切换箭头设置z-index：2，position：absolute，让其覆盖在图片上； 左右切换箭头在初始状态下设置为隐藏display：none，鼠标移上图片时使其显示display：block，鼠标移到箭头上时改变透明度RGBA，使箭头颜色加深； 附源码HTML代码 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;焦点轮播图&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/焦点轮播图.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;container&quot;&gt; &lt;div id=&quot;list&quot; style=&quot;left: -600px&quot;&gt; &lt;img src=&quot;images/5.jpg&quot; alt=&quot;5&quot;&gt; &lt;!-- 附属图实现无缝的滚动 --&gt; &lt;img src=&quot;images/1.jpg&quot; alt=&quot;1&quot;&gt; &lt;img src=&quot;images/2.jpg&quot; alt=&quot;2&quot;&gt; &lt;img src=&quot;images/3.jpg&quot; alt=&quot;3&quot;&gt; &lt;img src=&quot;images/4.jpg&quot; alt=&quot;4&quot;&gt; &lt;img src=&quot;images/5.jpg&quot; alt=&quot;5&quot;&gt; &lt;img src=&quot;images/1.jpg&quot; alt=&quot;5&quot;&gt; &lt;/div&gt; &lt;div id=&quot;buttons&quot;&gt; &lt;span index=&quot;1&quot; class=&quot;on&quot;&gt;&lt;/span&gt; &lt;span index=&quot;2&quot;&gt;&lt;/span&gt; &lt;span index=&quot;3&quot;&gt;&lt;/span&gt; &lt;span index=&quot;4&quot;&gt;&lt;/span&gt; &lt;span index=&quot;5&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;a href=&quot;javascript:;&quot; id=&quot;prev&quot; class=&quot;arrow&quot;&gt;&amp;lt;&lt;/a&gt; &lt;a href=&quot;javascript:;&quot; id=&quot;next&quot; class=&quot;arrow&quot;&gt;&amp;gt;&lt;/a&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/焦点轮播图.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; css代码 *{ margin: 0; padding: 0; text-decoration :none; } body{ padding: 20px; } #container{ width: 600px; height: 400px; position: relative; border: 3px solid #333; overflow: hidden; } #list{ height: 400px; width: 4200px; position: absolute; z-index: 1; /*设置元素的堆叠顺序*/ } #list img{ float: left; } #buttons{ height: 10px; width: 100px; z-index: 2; bottom: 20px; left: 250px; position: absolute; } #buttons span { cursor: pointer; /*规定要显示的光标的类型（手指)*/ float: left; border: 1px solid #fff; width: 10px; height: 10px; border-radius: 50%; background: #333; margin-right: 5px; } #buttons .on { background: orangered; } .arrow { cursor: pointer; display: none; /*箭头隐藏*/ line-height: 39px; text-align: center; font-size: 36px; font-weight: bold; width: 40px; height: 40px; position: absolute; z-index: 2; top: 180px; background-color: RGBA(0,0,0,.3); /*透明度设置*/ color: #fff; } .arrow:hover { background-color: RGBA(0,0,0,.7); } #container:hover .arrow { display: block; /*箭头显示*/ } #prev { left: 20px; } #next { right: 20px; } JS动画实现箭头切换-&gt;无限滚动-&gt;按钮切换-&gt;延迟切换-&gt;自动播放 箭头切换 整个页面加载window.onload，获取元素 通过ID名获取页面中的元素（父容器、承载图片容器、圆点列表、箭头），赋值给一个变量 添加一个时间绑定，点击箭头时实现图片的切换 当点击右箭头时，改变left的值，向左移动，要减去一张图的宽度 获取图片容器的值，list.style.left = 自身的值再减去一张图片的宽度注意要把等号后面字符串使用parseInt函数转换为数字才可以进行减法，减去的图片宽度要加px单位 反方向同理，加上一张图片的宽度 左右箭头的写法很相似，只是加减不一样，可以封装成一个函数，通过参数的正负值实现加减 无限滚动：弥补左右键切换的空白 当前面的附属图比第一张大，最后一张附属图比最后一张小的时候，出现这两种情况时让它复位到真正的第一张或第五张图 判断是否滚到了辅助图上，滚到了让它归位 把常用的list.style.left，存到一个变量中，方便使用 添加圆点的切换功能，创建一个变量来承载当前存储的第几张图片/显示第个圆点 写一个函数，用来显示亮起小圆点的功能 圆点是数组，所以创建的变量要减去1才能对应上要显示的圆点，让它亮起来添加class名&lt;span index=&quot;1&quot; class=&quot;on&quot;&gt; 再绑定事件中左箭头index要加一，右箭头要减一，调用圆点函数让它点击时显示，每次点击箭头的时候都要改变index的值，使它对应到正确的图片上，调用showButton亮起对应的圆点 亮起自己的同时，让其他不亮，使用for循环，去掉所有的class，然后break退出循环，不再继续遍历元素节点 箭头点击时，当圆点index大于5时，让它归位为1，小于1时，归位为5，不到5时加1 圆点按钮切换 通过for循环遍历圆点，添加点击事件 点击按钮时，取到index值，就可以知道当前点击的是第几个按钮，要显示第几张图片 通过DOM2级方法getAttribute（）获取到自定义（或自带）属性，为了计算再转换为数字var myIndex = parseInt(this.getAttribute(&#39;index&#39;)); 通过新的值减去旧的值获取偏移量var offset = -600 * (myIndex - index); 写一个判断，当这张图片是打开状态的，就什么都不做，用class=on来判断是否打开，return跳出，后面的代码不会再执行123456if (animated) &#123; return;&#125;if (this.className == &apos;on&apos;) &#123; return;&#125; 动画函数 图片在一定时间内进行位移，要判断是否达到目标值，没有达到还要继续做位移 声明一个变量用offset总共的偏移量除以次数（位移总时间time除以位移间隔时间inteval),求出每次移动多少var speed = offset / (time / inteval); 判断speed小于0并且left值是否大于目标值newLeft或speed大于0并且left值小于目标值，这两种情况让它做位移speed &gt; 0 &amp;&amp; parseInt(list.style.left) &lt; left) || (speed &lt; 0 &amp;&amp; parseInt(list.style.left) &gt; left 在判断中放入定时器setTimeout一个函数不停的在一定的条件之后调用自身这种做法叫做递归 优化：声明一个变量，作为动画是否在运行的依据，开始状态为false表示没有运行var animated = false; //优化 自动播放： 鼠标移开时自动播放，鼠标移上去时停止，通过定时器setTimeout和clearTimeout来实现的 设置定时器，让它隔几秒切换一次，相当于3秒钟调一次next.onclick（右箭头）事件 自动切换需要写两个函数来控制自动切换，声明一个变量来存放定时器不给任何值 鼠标移开时定时器执行，移上时清除定时器执行，要给整个容器加一个鼠标移入移开事件 鼠标不做任何事情时让它自动播放，调用函数 附源码 window.onload = function() { var container = document.getElementById(&apos;container&apos;); var list = document.getElementById(&apos;list&apos;); var buttons = document.getElementById(&apos;buttons&apos;).getElementsByTagName(&apos;span&apos;); var prev = document.getElementById(&apos;prev&apos;); var next = document.getElementById(&apos;next&apos;); var index = 1; //索引 var len = 5; var animated = false; //优化 var interval = 3000; //时间间隔 var timer; function showButton() { for (var i = 0; i &lt; buttons.length; i++) { if (buttons[i].className == &apos;on&apos;) { buttons[i].className = &apos;&apos;; break; } } buttons[index - 1].className = &apos;on&apos;; } //按钮切换 next.onclick = function() { if (animated) { return; } if (index == 5) { index = 1; } else { index += 1; } animate(-600); showButton(); }//右切换 prev.onclick = function() { if (animated) { return; } if (index == 1) { index = 5; } else { index -= 1; } animate(600); showButton(); }//左切换 function play() { timer = setTimeout(function() { next.onclick(); play(); }, interval); } function stop() { clearTimeout(timer); } for (var i = 0; i &lt; buttons.length; i++) { buttons[i].onclick = function() { if (animated) { return; } if (this.className == &apos;on&apos;) { return; } var myIndex = parseInt(this.getAttribute(&apos;index&apos;)); var offset = -600 * (myIndex - index); animate(offset); index = myIndex; showButton(); } } function animate(offset) { if (offset == 0) { return; } animated = true; var time = 300; //时间 var inteval = 10; //时间间隔 var speed = offset / (time / inteval); //速度 var left = parseInt(list.style.left) + offset; //改变值来实现滚动 var go = function() { if ((speed &gt; 0 &amp;&amp; parseInt(list.style.left) &lt; left) || (speed &lt; 0 &amp;&amp; parseInt(list.style.left) &gt; left)) { list.style.left = parseInt(list.style.left) + speed + &apos;px&apos;; setTimeout(go, inteval); } else { list.style.left = left + &apos;px&apos;; if (left &gt; -200) { list.style.left = -600 * len + &apos;px&apos;; } if (left &lt; (-600 * len)) { list.style.left = &apos;-600px&apos;; } animated = false; } } //自动滚动 go(); } container.onmouseover = stop(); container.onmouseout = play(); play(); } ##总结## 焦点轮播图的实现需要耐心分析原理，掌握焦点轮播图所需的技能点，从而通过代码实现。 先写出静态页面html+css，注意属性值的设置。再用js一步一步写出箭头切换、按钮切换的函数，学会设置和清除定时器、递归调用函数，实现自动滚动播放。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2Fhello-world.html</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
